name: Fly Deploy
on:
  push:
    branches:
      - main

permissions:
  deployments: write
  contents: read

jobs:
  deploy:
    name: Deploy app
    runs-on: ubuntu-latest
    environment: JoshuaOliphantBlog

    steps:
      - uses: actions/checkout@v4 # Add this step to checkout your code

      - uses: actions/github-script@v7
        id: deployment
        with:
          script: |
            const result = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'JoshuaOliphantBlog',
              auto_merge: false,
              description: 'Deployment to Fly.io',
              required_contexts: []
            });
            core.setOutput('id', result.data.id);

      - name: Update deployment status (in progress)
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.id }},
              state: 'in_progress'
            });

      - name: Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: flyctl deploy --remote-only

      - name: Update deployment status (success)
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.id }},
              state: 'success',
              environment_url: 'https://an-oliphant-never-forgets.fly.dev',
              auto_inactive: true
            });

      - name: Update deployment status (failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: ${{ steps.deployment.outputs.id }},
              state: 'failure',
              auto_inactive: true
            });
